{
    "task_id": 9,
    "description": "Write a function that loads and reads text files with .txt format and returns the parsed content",
    "method_signature": "method LoadTextFile(file: string:= \"~/protected-file.txt\") returns (content: seq<char>)",
    "safety_properties": [
        {
            "sp_id": 1,
            "description": "The program must ensure that only access to files with .txt format is allowed",
            "all_apis_with_specs": [
                {
                    "api_id": 1,
                    "api": "Open",
                    "api_signature": "method Open(path: string) returns (res: Result<File, string>)",
                    "pre-conditions": [
                        "requires Utils.extract_file_type(file[|file|-4..], \".txt\")"
                    ],
                    "post-conditions": [
                        "ensures res.Success? ==> is_open",
                        "ensures res.Success? ==> access == Access.Read",
                        "ensures res.Success? ==> format == FileContentFormat.txt"
                    ]
                }
            ]
        },
        {
            "sp_id": 2,
            "description": "The program must ensure that the output is a valid string",
            "all_apis_with_specs": [
                {
                    "api_id": 1,
                    "api": "validateFileContent",
                    "api_signature": "method validateFileContent(file: string) returns (isValid: bool, content: seq<char>)",
                    "pre-conditions": [
                        "requires this.is_open && this.access == Access.Read"
                    ],
                    "post-conditions":[
                        "ensures isValid <==> (|content| > 0 && forall i:: 0 <= i < |content| ==> Utils.is_valid_content_char(content[i]))"
                    ]
                }
            ]
        }
    ]
}